diff --git a/drivers/iommu/intel/iommu.c b/drivers/iommu/intel/iommu.c
index dad910ba9553..85dd17a2fef9 100644
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@ -101,6 +101,7 @@
  * we could change this to advertise the real page sizes we support.
  */
 #define INTEL_IOMMU_PGSIZES	(~0xFFFUL)
+static int intel_relaxable_rmrr = 0;
 
 static inline int agaw_to_level(int agaw)
 {
@@ -446,7 +447,10 @@ static int __init intel_iommu_setup(char *str)
 			dmar_disabled = 1;
 			no_platform_optin = 1;
 			pr_info("IOMMU disabled\n");
-		} else if (!strncmp(str, "igfx_off", 8)) {
+		} else if (!strncmp(str, "relax_rmrr", 10)) {
+			pr_info("Intel-IOMMU: assuming all RMRRs are relaxable. This can lead to instability or data loss\n");
+			intel_relaxable_rmrr = 1;
+ 		} else if (!strncmp(str, "igfx_off", 8)) {
 			dmar_map_gfx = 0;
 			pr_info("Disable GFX device mapping\n");
 		} else if (!strncmp(str, "forcedac", 8)) {
@@ -464,7 +468,7 @@ static int __init intel_iommu_setup(char *str)
 		} else if (!strncmp(str, "tboot_noforce", 13)) {
 			pr_info("Intel-IOMMU: not forcing on after tboot. This could expose security risk for tboot\n");
 			intel_iommu_tboot_noforce = 1;
-		}
+		} 
 
 		str += strcspn(str, ",");
 		while (*str == ',')
@@ -2842,7 +2846,7 @@ static bool device_rmrr_is_relaxable(struct device *dev)
 		return false;
 
 	pdev = to_pci_dev(dev);
-	if (IS_USB_DEVICE(pdev) || IS_GFX_DEVICE(pdev))
+	if (intel_relaxable_rmrr || IS_USB_DEVICE(pdev) || IS_GFX_DEVICE(pdev))
 		return true;
 	else
 		return false;
